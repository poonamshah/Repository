/*package com.royall.desktopagent.plugin.autoprint;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;

import javax.print.DocFlavor;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.print.attribute.standard.MediaSizeName;
import javax.swing.BorderFactory;
import javax.swing.ButtonGroup;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JRadioButton;

import com.royall.desktopagent.client.ui.BaseConfigJPanel;
import com.royall.desktopagent.plugin.PlugInManager;

public class ConfigUIPanel extends BaseConfigJPanel {
	private static final long serialVersionUID = 1L;
	private JLabel jLabel = null;
	private JPanel jPanel = null;  //  @jve:decl-index=0:visual-constraint="45,13"
	private JLabel jLabel1 = null;
	private JRadioButton jYesRadioButton = null;
	private JRadioButton jNoRadioButton = null;
	private JComboBox jPrinterComboBox = null;

	*//**
	 * This is the default constructor
	 *//*
	public ConfigUIPanel(PlugInManager manager) {
		super(manager);
		initialize();
	}

	*//**
	 * This method initializes this
	 * 
	 * @return void
	 *//*
	private void initialize() {
		this.setLayout( new BorderLayout() );
		this.add( getHelpPanel("Manages the auto spooling of recent PDF files"), BorderLayout.NORTH );
		this.add( getJPanel(), BorderLayout.CENTER );
	}

	public void onApply(){
		manager.getConfig().setProperty("plugin.autoprint.printer", jPrinterComboBox.getSelectedItem().toString() );
		if ( jYesRadioButton.isSelected() ){
			manager.getConfig().setProperty("plugin.autoprint.enabled", "yes");
		}else{
			manager.getConfig().setProperty("plugin.autoprint.enabled", "no");
		}
	}
	
	*//**
	 * This method initializes jPanel	
	 * 	
	 * @return javax.swing.JPanel	
	 *//*
	private JPanel getJPanel() {
		if (jPanel == null) {
			GridBagConstraints gridBagConstraints4 = new GridBagConstraints();
			gridBagConstraints4.fill = GridBagConstraints.BOTH;
			gridBagConstraints4.gridy = 0;
			gridBagConstraints4.weightx = 1.0;
			gridBagConstraints4.insets = new Insets(5, 5, 5, 5);
			gridBagConstraints4.gridx = 2;
			GridBagConstraints gridBagConstraints3 = new GridBagConstraints();
			gridBagConstraints3.gridx = 1;
			gridBagConstraints3.anchor = GridBagConstraints.WEST;
			gridBagConstraints3.gridwidth = 2;
			gridBagConstraints3.insets = new Insets(0, 5, 5, 5);
			gridBagConstraints3.gridy = 2;
			GridBagConstraints gridBagConstraints21 = new GridBagConstraints();
			gridBagConstraints21.gridx = 1;
			gridBagConstraints21.gridwidth = 2;
			gridBagConstraints21.insets = new Insets(5, 5, 0, 5);
			gridBagConstraints21.anchor = GridBagConstraints.WEST;
			gridBagConstraints21.gridy = 1;
			GridBagConstraints gridBagConstraints11 = new GridBagConstraints();
			gridBagConstraints11.gridx = 0;
			gridBagConstraints11.insets = new Insets(5, 5, 5, 5);
			gridBagConstraints11.gridy = 1;
			jLabel1 = new JLabel();
			jLabel1.setText("Enabled:");
			jPanel = new JPanel();
			jPanel.setLayout(new GridBagLayout());
			
			jPanel.setLayout(new GridBagLayout());
			jPanel.setPreferredSize(new Dimension(300, 200));
			jPanel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));

			
			GridBagConstraints gridBagConstraints2 = new GridBagConstraints();
			gridBagConstraints2.gridx = 0;
			gridBagConstraints2.insets = new Insets(5, 5, 5, 5);
			gridBagConstraints2.anchor = GridBagConstraints.WEST;
			gridBagConstraints2.gridy = 0;
			
			jLabel = new JLabel();
			jLabel.setText("Printer:");
			
			jPanel.add(jLabel, gridBagConstraints2);
			
			jPanel.add(jLabel1, gridBagConstraints11);
			jPanel.add(getJYesRadioButton(), gridBagConstraints21);
			jPanel.add(getJNoRadioButton(), gridBagConstraints3);
			jPanel.add(getJPrinterComboBox(), gridBagConstraints4);
			
			ButtonGroup yesNoGroup = new ButtonGroup();
			yesNoGroup.add( getJYesRadioButton() );
			yesNoGroup.add( getJNoRadioButton() );
		}
		return jPanel;
	}

	*//**
	 * This method initializes jYesRadioButton	
	 * 	
	 * @return javax.swing.JRadioButton	
	 *//*
	private JRadioButton getJYesRadioButton() {
		if (jYesRadioButton == null) {
			jYesRadioButton = new JRadioButton();
			jYesRadioButton.setText("Yes, auto spool PDF to printer");
			
			if ( manager.getConfig().getProperty("plugin.autoprint.enabled", "no").equalsIgnoreCase("yes") ){
				jYesRadioButton.setSelected( true );
			}
			
		}
		return jYesRadioButton;
	}

	*//**
	 * This method initializes jNoRadioButton	
	 * 	
	 * @return javax.swing.JRadioButton	
	 *//*
	private JRadioButton getJNoRadioButton() {
		if (jNoRadioButton == null) {
			jNoRadioButton = new JRadioButton();
			jNoRadioButton.setText("No");
			
			if ( manager.getConfig().getProperty("plugin.autoprint.enabled", "no").equalsIgnoreCase("no") ){
				jNoRadioButton.setSelected( true );
			}
		}
		return jNoRadioButton;
	}

	*//**
	 * This method initializes jPrinterComboBox	
	 * 	
	 * @return javax.swing.JComboBox	
	 *//*
	private JComboBox getJPrinterComboBox() {
		if (jPrinterComboBox == null) {
			jPrinterComboBox = new JComboBox();
			
			DocFlavor flavor = DocFlavor.SERVICE_FORMATTED.PAGEABLE;
		  PrintRequestAttributeSet aset = new HashPrintRequestAttributeSet();
		  aset.add(MediaSizeName.ISO_A4);
		  PrintService[] pservices = PrintServiceLookup.lookupPrintServices(flavor, aset);
		  
		  for ( int x=0; x < pservices.length; x++ ){
		  	jPrinterComboBox.addItem(pservices[x].getName());
		  	if ( manager.getConfig().getProperty("plugin.autoprint.printer", "").equals(pservices[x].getName()) ){
		  		jPrinterComboBox.setSelectedIndex( x );
		  	}
		  }
		}
		return jPrinterComboBox;
	}

}  //  @jve:decl-index=0:visual-constraint="10,2"
*/